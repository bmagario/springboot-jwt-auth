plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'groovy'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
	testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
}

test {
	useJUnitPlatform()

	testLogging {
		showStandardStreams = true
		events = ["passed", "skipped", "failed"]
	}

	afterSuite { desc, result ->
		if (!desc.parent) { // will match the outermost suite
			println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
		}
	}
}